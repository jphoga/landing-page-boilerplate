{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport nc from 'next-connect';\nimport notes from '../../../src/data/data';\nconst handler = nc().get((req, res) => {\n  res.json({\n    data: notes\n  });\n}).post((req, res) => {\n  const id = Date.now();\n\n  const note = _objectSpread(_objectSpread({}, req.body), {}, {\n    id\n  });\n\n  notes.push(note);\n  res.json({\n    data: note\n  });\n});\nexport default handler;","map":{"version":3,"sources":["/Users/janpaulhoga/code/jphoga/landing-page-boilerplate/pages/api/note/index.js"],"names":["nc","notes","handler","get","req","res","json","data","post","id","Date","now","note","body","push"],"mappings":";;;;;;AAAA,OAAOA,EAAP,MAAe,cAAf;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,MAAMC,OAAO,GAAGF,EAAE,GACfG,GADa,CACT,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjBA,EAAAA,GAAG,CAACC,IAAJ,CAAS;AAACC,IAAAA,IAAI,EAAEN;AAAP,GAAT;AACD,CAHa,EAIbO,IAJa,CAIR,CAACJ,GAAD,EAAMC,GAAN,KAAc;AAClB,QAAMI,EAAE,GAAGC,IAAI,CAACC,GAAL,EAAX;;AACA,QAAMC,IAAI,mCAAOR,GAAG,CAACS,IAAX;AAAiBJ,IAAAA;AAAjB,IAAV;;AAEAR,EAAAA,KAAK,CAACa,IAAN,CAAWF,IAAX;AACAP,EAAAA,GAAG,CAACC,IAAJ,CAAS;AAACC,IAAAA,IAAI,EAAEK;AAAP,GAAT;AACD,CAVa,CAAhB;AAWA,eAAeV,OAAf","sourcesContent":["import nc from 'next-connect'\nimport notes from '../../../src/data/data'\n\nconst handler = nc()\n  .get((req, res) => {\n    res.json({data: notes})\n  })\n  .post((req, res) => {\n    const id = Date.now()\n    const note = {...req.body, id}\n\n    notes.push(note)\n    res.json({data: note})\n  })\nexport default handler"]},"metadata":{},"sourceType":"module"}